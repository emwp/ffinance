scalar Date

type Transaction {
  id: ID!
  reference: String!
  currency: String!
  amount: Float!
  date: Date!
  category: FullCategory!
  categoryId: ID!
  account: FullAccount!
  accountId: ID!
}

type FullCategory {
  id: ID!
  name: String!
  color: String!
}

type Category {
  name: String!
}

type Bank {
  bank: String!
}

type FullAccount {
  id: ID!
  name: String!
  bank: String!
}

type Account {
  name: String!
}

type Query {
  transactions(
    search: String
    category: String
    bank: String
    account: String
    from: Date
    to: Date
    first: Int
    cursor: String
    orderBy: String
  ): [Transaction]
  findTransactionById(txId: ID): Transaction
  categories: [Category]
  accounts: [Account]
  banks: [Bank]
}

type Mutation {
  updateCategory(categoryId: ID, name: String!, color: String!): FullCategory
}
